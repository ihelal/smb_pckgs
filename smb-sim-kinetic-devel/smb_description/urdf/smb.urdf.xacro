<?xml version="1.0"?>

<robot name="smb" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.14159"/>

    <!-- Chassis Info -->
  <xacro:property name="base_x_size" value="0.8382" />
  <xacro:property name="base_y_size" value="0.8382" />
  <xacro:property name="base_z_size" value="0.4064" />
  <xacro:property name="chassis_mass" value="96.1616" />

  <!--Inertia Info -->
  <xacro:property name="dummy_inertia" value="1e-09"/>



  <xacro:macro name="box_inertia" params="m x y z">
    <inertia ixx="${m*(y*y+z*z)/12}" ixy="0" ixz="0"
             iyy="${m*(x*x+z*z)/12}" iyz="0"
             izz="${m*(x*x+z*z)/12}" />
  </xacro:macro>

<!--GPS Marco-->
  <xacro:macro name="novatel_smart6" params="prefix">
  <link name="${prefix}_link">
    <visual>
      <origin xyz="0 0 3" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://smb_description/meshes/SMB_meshs/gps.dae"/>
      </geometry>
    </visual>
  </link>
  </xacro:macro>
  

  <xacro:arg name="3d_laser_enable" default="false" />
  <xacro:arg name="laser_enabled" default="false" />
  <xacro:arg name="laser2_enabled" default="false" />
  <xacro:arg name="gps_enabled" default="false" />
  <xacro:arg name="gpu" default="false"/>
  <xacro:arg name="laser_xyz" default="$(optenv SMB_LMS1XX_XYZ ${base_x_size/2*1.1} 0.0 ${-base_z_size/2})" />
  <xacro:arg name="laser_rpy" default="$(optenv SMB_LMS1XX_RPY 0.0 0.0 0.0)" />

  <xacro:arg name="laser2_xyz" default="$(optenv SMB_LMS1XX_XYZ ${-base_x_size/2*1.1} 0.0 ${-base_z_size/2})" />
  <xacro:arg name="laser2_rpy" default="$(optenv SMB_LMS1XX_RPY 0.0 0.0 ${M_PI})" />

  <xacro:arg name="kinect_enabled" default="false" />
  <xacro:arg name="kinect_xyz" default="$(optenv SMB_KINECT_XYZ 0 0 0)" />
  <xacro:arg name="kinect_rpy" default="$(optenv SMB_KINECT_RPY 0 0.1 3.14)" />


  <xacro:arg name="robot_namespace" default="/" />
  <xacro:arg name="urdf_extras" default="empty.urdf" />

  <!-- Included URDF/XACRO Files -->
  
  <xacro:include filename="$(find smb_description)/urdf/wheel.urdf.xacro" />
  <xacro:include filename="$(find smb_description)/urdf/cart.urdf.xacro" />

  <xacro:include filename="$(find smb_description)/urdf/accessories/kinect_camera.urdf.xacro"/>
  <xacro:include filename="$(find smb_description)/urdf/accessories/sick_lms1xx_mount.urdf.xacro"/>
  <xacro:include filename="$(find smb_description)/urdf/accessories/sensor_arch.urdf.xacro"/>
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.25" />
  <xacro:property name="track" value="0.50" />
  <xacro:property name="wheel_vertical_offset" value="-0.15" />

  <!-- Wheel Properties -->
	<xacro:property name="wheel_length" value="0.10414" />
	<xacro:property name="wheel_radius" value="0.149225" />

  <!-- Base link is the center of the robot's bottom plate -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://smb_description/meshes/base_link.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
      </geometry>
    </collision>
  </link>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Interial link stores the robot's inertial information -->
  <link name="inertial_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${chassis_mass}" /> <!-- Mass of the Robot -->
      <xacro:box_inertia m="${chassis_mass}" x="${base_x_size}"
                         y="${base_y_size}" z="${base_z_size}" />
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>




  <!--<xacro:cart_macro cart_number="1" base_frame="base_link">-->
   
  <!--</xacro:cart_macro>-->



  <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin xyz="$(optenv SMB_IMU_XYZ 0.19 0 0.149)" rpy="$(optenv SMB_IMU_RPY 0 -1.5708 3.1416)" />
    <parent link="base_link" />
    <child link="imu_link" />
  </joint>
  <gazebo reference="imu_link">
  </gazebo>

  <!-- SMB wheel macros -->
  <xacro:smb_wheel wheel_prefix="front_left">
    <origin xyz="${wheelbase} ${track} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:smb_wheel>
  <xacro:smb_wheel wheel_prefix="front_right">
    <origin xyz="${wheelbase} ${-track} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:smb_wheel>
  <xacro:smb_wheel wheel_prefix="rear_left">
    <origin xyz="${-wheelbase} ${track} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:smb_wheel>
  <xacro:smb_wheel wheel_prefix="rear_right">
    <origin xyz="${-wheelbase} ${-track} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:smb_wheel>

  <!--3D Lidar -->
  <xacro:if value="$(arg 3d_laser_enable)">
    <VLP-16 parent="base_link" name="velodyne" topic="/cloud" hz="10" samples="440" gpu="$(arg gpu)">
      <origin xyz="0.25 0 ${base_z_size/2}" rpy="0 0 0" />
  </VLP-16>
  </xacro:if>

  <!--2D Lidar -->
  <xacro:if value="$(arg laser_enabled)">

    <sick_lms1xx_mount prefix="base"/>

    <sick_lms1xx frame="base_laser" topic="scan" robot_namespace="$(arg robot_namespace)"/>

    <joint name="laser_mount_joint" type="fixed">
      <origin xyz="$(arg laser_xyz)" rpy="$(arg laser_rpy)" />
      <parent link="base_link" />
      <child link="base_laser_mount" />
    </joint>

  </xacro:if>

    <!--2nd 2D Lidar -->
  <xacro:if value="$(arg laser2_enabled)">

  <xacro:include filename="$(find lms1xx)/urdf/sick_lms1xx.urdf.xacro" />

     <link name="base2_laser_mount">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${-M_PI/2}" />
        <geometry>
          <!-- Origin of this mesh is the base of the bracket. -->
          <mesh filename="package://smb_description/meshes/accessories/lms1xx_mount.dae" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 .0585" rpy="0 0 0" />
        <geometry>
          <box size=".1 .108 .117" />
        </geometry>
      </collision>
    </link>

    <joint name="base2_laser_joint" type="fixed">
      <!-- This offset is from the base of the bracket to the LIDAR's focal point. -->
      <origin xyz="0.0352 0 0.0566" rpy="${M_PI} 0 0" />
      <parent link="base2_laser_mount" />
      <child link="base2_laser" />
    </joint>

    <sick_lms1xx frame="base2_laser" topic="scan2" robot_namespace="$(arg robot_namespace)"/>

    <joint name="laser2_mount_joint" type="fixed">
      <origin xyz="$(arg laser2_xyz)" rpy="$(arg laser2_rpy)" />
      <parent link="base_link" />
      <child link="base2_laser_mount" />
    </joint>

  </xacro:if>

  <!--Kinect -->
  <xacro:if value="$(arg kinect_enabled)">

    <xacro:sensor_arch prefix="" parent="base_link">
      <origin xyz="0.09 0 ${base_z_size-wheel_vertical_offset+wheel_radius}" rpy="0 0 ${-M_PI}"/>
    </xacro:sensor_arch>
    <joint name="kinect_frame_joint" type="fixed">
      <origin xyz="$(arg kinect_xyz)" rpy="$(arg kinect_rpy)" />
      <parent link="sensor_arch_mount_link"/>
      <child link="camera_link"/>
    </joint>

    <xacro:kinect_camera prefix="camera" robot_namespace="$(arg robot_namespace)"/>
  </xacro:if>

  <!--GPS-->
<xacro:if value="$(arg gps_enabled)"> 
  <link name="navsat_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://smb_description/meshes/SMB_meshs/gps.dae"/>
        </geometry>
      </visual>
    </link>

    <joint name="navsat_joint" type="fixed">
        <origin xyz="0 0 ${base_z_size*1}" rpy="0 0 0" />
        <parent link="base_link" />
        <child  link="navsat_link" />
    </joint>
    </xacro:if>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.001 0.001 0.001</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.001 0.001 0.001 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.001</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>50</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>49.097745</referenceLatitude>
      <referenceLongitude>-122.260090</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>

</robot>
